services:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  db:
    image: postgres:13
    container_name: postgres-container
    environment:
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
      POSTGRES_DB: ${DB__NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB__USER}", "-d", "${DB__NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  app:
    build: .
    container_name: fastapi-app
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://${DB__USER}:${DB__PASSWORD}@${DB__HOST}:${DB__PORT}/${DB__NAME}
      - REDIS_URL=redis://${REDIS__HOST}:${REDIS__PORT}/${REDIS__DB}
      - SECRET_KEY=${JWT__SECRET_KEY}
      - ALGORITHM=${JWT__ALGORITHM}
      - ACCESS_EXPIRE_MIN=${JWT__ACCESS_EXPIRE_MIN}
      - REFRESH_EXPIRE_DAYS=${JWT__REFRESH_EXPIRE_DAYS}
      - API_PREFIX=${API__PREFIX}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  db-data:
