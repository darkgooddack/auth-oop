name: CI for FastAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  fastapi-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user" --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run FastAPI tests
        run: |
          pytest --maxfail=1 --disable-warnings -q || exit_code=$?
          if [ "$exit_code" -ne 5 ] && [ "$exit_code" -ne 0 ]; then exit $exit_code; fi

  docker-deploy:
    runs-on: ubuntu-latest
    needs: fastapi-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Run docker-compose
        run: docker-compose -f docker/docker-compose.yml up --build -d

      - name: Healthcheck
        run: |
          curl --fail http://localhost:8000/health

      - name: Clean up Docker containers
        run: |
          docker-compose -f docker/docker-compose.yml down
